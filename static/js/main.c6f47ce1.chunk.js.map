{"version":3,"sources":["components/converter.js","App.js","index.js"],"names":["Converter","valid","error","form","handleChange","className","style","background","name","value","onChange","hexToRgb","App","useState","setForm","setValid","RegExp","target","length","test","validateValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAqBeA,EAjBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACvC,OACE,sBACEC,UAAU,YACVC,MAAOL,EAAQ,CAAEM,WAAW,GAAD,OAAKN,IAAY,CAAEM,WAAY,WAF5D,UAIE,uBACEF,UAAU,QACVG,KAAK,kBACLC,MAAON,EACPO,SAAUN,IAEZ,qBAAKC,UAAU,SAAf,SAAyBJ,EAAK,eAAWU,IAASV,GAApB,KAAgCC,QCerDU,MA5Bf,WACE,IAGA,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA0BD,oBAAS,GAAnC,mBAAOZ,EAAP,KAAcc,EAAd,KAEMC,EAAS,kBASf,OACE,8BACE,cAAC,EAAD,CACEb,KAAMA,EACNF,MAAOA,EACPG,aAVe,SAAC,GAA2B,IAAfK,EAAc,EAAxBQ,OAAUR,MATd,IAUlBA,EAAMS,QAJc,SAACT,GACrBO,EAAOG,KAAKV,GAASM,EAASN,GAASM,EAASC,EAAOG,KAAKV,IAG5BW,CAAcX,GAC9CA,EAAMS,QAXY,GAWaJ,EAAQL,IASnCP,MArBQ,+CCEhBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c6f47ce1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport hexToRgb from \"hex-to-rgb\";\n\nconst Converter = ({ valid, error, form, handleChange }) => {\n  return (\n    <div\n      className=\"container\"\n      style={valid ? { background: `${valid}` } : { background: \"#ff0000\" }}\n    >\n      <input\n        className=\"input\"\n        name=\"backgroundColor\"\n        value={form}\n        onChange={handleChange}\n      />\n      <div className=\"output\">{valid ? `rgb (${hexToRgb(valid)})` : error}</div>\n    </div>\n  );\n};\n\nexport default Converter;\n","import React, { useState } from \"react\";\nimport Converter from \"./components/converter\";\n\nfunction App() {\n  const error = \"Ошибка!!!\";\n  const validNumber = 7;\n\n  const [form, setForm] = useState(\"\");\n  const [valid, setValid] = useState(true);\n\n  const RegExp = /^#[0-9A-F]{6}$/i;\n  const validateValue = (value) =>\n    RegExp.test(value) ? setValid(value) : setValid(RegExp.test(value));\n\n  const handleChange = ({ target: { value } }) => {\n    value.length === validNumber && validateValue(value);\n    value.length <= validNumber && setForm(value);\n  };\n\n  return (\n    <div>\n      <Converter\n        form={form}\n        valid={valid}\n        handleChange={handleChange}\n        error={error}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}